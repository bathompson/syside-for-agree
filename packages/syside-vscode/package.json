{
    "name": "syside",
    "displayName": "SysIDE",
    "description": "SysML v2 language support in VS Code.",
    "publisher": "Sensmetry",
    "author": {
        "name": "Sensmetry",
        "url": "https://sensmetry.com/",
        "email": "opensource@sensmetry.com"
    },
    "version": "0.5.2",
    "icon": "icons/logo.png",
    "engines": {
        "vscode": "^1.56.0"
    },
    "categories": [
        "Programming Languages",
        "Other",
        "Formatters",
        "Linters"
    ],
    "keywords": [
        "SysML",
        "KerML",
        "SysML-v2"
    ],
    "preview": true,
    "extensionKind": [
        "workspace",
        "ui"
    ],
    "repository": {
        "url": "https://gitlab.com/sensmetry/public/sysml-2ls",
        "type": "git",
        "directory": "packages/syside-vscode"
    },
    "bugs": {
        "url": "https://gitlab.com/sensmetry/public/sysml-2ls/-/issues"
    },
    "activationEvents": [
        "onLanguage:kerml",
        "onLanguage:sysml"
    ],
    "files": [
        "out",
        "src"
    ],
    "main": "./dist/node/extension.js",
    "browser": "./dist/browser/extension.js",
    "scripts": {
        "lint": "eslint src --ext ts --max-warnings 0",
        "clean": "shx rm -rf out *.tsbuildinfo",
        "build": "pnpm run typecheck && pnpm run esbuild",
        "watch": "concurrently -n tsc,esbuild -c blue,yellow \"pnpm run typecheck -w\" \"pnpm run esbuild:watch\"",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "vscode:prepublish": "pnpm run clean && node ./scripts/prepublish.mjs",
        "vscode:package": "node ./scripts/package.mjs",
        "vscode:publish": "node ./scripts/publish.mjs",
        "ovsx:publish": "ovsx publish",
        "esbuild": "concurrently -n node,web -c blue,yellow \"pnpm run esbuild-base:node --minify\" \"pnpm run esbuild-base:browser --minify\"",
        "esbuild:watch": "concurrently -n node,web -c blue,yellow \"pnpm run esbuild:node --watch\" \"pnpm run esbuild:browser --watch\"",
        "esbuild-base:node": "node ../../scripts/build.mjs node src/node/extension.ts src/node/language-server/main.ts -o ./dist/node",
        "esbuild:node": "pnpm run esbuild-base:node --sourcemap",
        "esbuild-base:browser": "node ../../scripts/build.mjs browser src/browser/extension.ts src/browser/language-server/main.ts -o ./dist/browser",
        "esbuild:browser": "pnpm run esbuild-base:browser --sourcemap inline",
        "generate:schema": "node ./scripts/generate-schemas.mjs"
    },
    "dependencies": {
        "fs-extra": "^11.1.0",
        "node-fetch": "^3.3.2",
        "syside-languageclient": "workspace:*",
        "syside-languageserver": "workspace:*",
        "syside-base": "workspace:*",
        "syside-protocol": "workspace:*",
        "vscode-languageclient": "~8.0.2",
        "vscode-languageserver": "~8.0.2",
        "vscode-uri": "~3.0.7"
    },
    "devDependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/vscode": "^1.56.0",
        "@vscode/vsce": "^2.20.0",
        "ovsx": "^0.8.0",
        "typescript-json-schema": "^0.59.0"
    },
    "vsce": {
        "dependencies": false,
        "gitlabBranch": "main",
        "githubBranch": "main"
    },
    "contributes": {
        "languages": [
            {
                "id": "kerml",
                "aliases": [
                    "KerML"
                ],
                "extensions": [
                    ".kerml"
                ],
                "configuration": "./language-configuration.json"
            },
            {
                "id": "sysml",
                "aliases": [
                    "SysML"
                ],
                "extensions": [
                    ".sysml"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "kerml",
                "scopeName": "source.kerml",
                "path": "./syntaxes/kerml.tmLanguage.json"
            },
            {
                "language": "sysml",
                "scopeName": "source.sysml",
                "path": "./syntaxes/sysml.tmLanguage.json"
            },
            {
                "path": "./syntaxes/sysml.md.tmLanguage.json",
                "scopeName": "markdown.sysml.codeblock",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.sysml": "sysml"
                }
            },
            {
                "path": "./syntaxes/kerml.md.tmLanguage.json",
                "scopeName": "markdown.kerml.codeblock",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.kerml": "kerml"
                }
            }
        ],
        "semanticTokenTypes": [
            {
                "id": "annotation",
                "superType": "relationship",
                "description": "Annotation"
            },
            {
                "id": "annotationBody",
                "superType": "string",
                "description": "Annotation body"
            },
            {
                "id": "relationship",
                "superType": "modifier",
                "description": "Relationship element"
            },
            {
                "id": "metaclass",
                "superType": "struct",
                "description": "Metaclass element"
            }
        ],
        "semanticTokenModifiers": [],
        "commands": [
            {
                "command": "syside.dumpAst.console",
                "shortTitle": "Dump AST of the current selection",
                "title": "SysIDE: Dump AST of the current selection in the active text editor"
            },
            {
                "command": "syside.dumpMeta.console",
                "shortTitle": "Dump Meta of the current selection",
                "title": "SysIDE: Dump Meta of the current selection in the active text editor"
            },
            {
                "command": "syside.updateDocument",
                "shortTitle": "Update current document",
                "title": "SysIDE: Update current document"
            },
            {
                "command": "syside.mro.console",
                "shortTitle": "Get MRO of the current node",
                "title": "SysIDE: Get MRO of the current node"
            },
            {
                "command": "syside.children.console",
                "shortTitle": "Get children of the current node",
                "title": "SysIDE: Get all direct, inherited and imported children of the current node"
            },
            {
                "command": "syside.scope.console",
                "shortTitle": "Get elements in scope of the current node",
                "title": "SysIDE: Get all elements in scope of the current node"
            },
            {
                "command": "syside.evaluate.console",
                "shortTitle": "Evaluate the selected expression",
                "title": "SysIDE: Evaluate the selected expression or feature value"
            },
            {
                "command": "syside.allCommands.console",
                "shortTitle": "Get all available language server commands",
                "title": "SysIDE: Get all available language server commands"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "submenu": "syside.commands"
                }
            ],
            "syside.commands": [
                {
                    "command": "syside.dumpAst.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.dumpMeta.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.updateDocument",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.mro.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.children.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.scope.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.evaluate.console",
                    "group": "SysML",
                    "when": "editorTextFocus && editorLangId =~ /(ker|sys)ml/"
                },
                {
                    "command": "syside.allCommands.console",
                    "group": "SysML",
                    "when": "editorLangId =~ /(ker|sys)ml/"
                }
            ]
        },
        "submenus": [
            {
                "id": "syside.commands",
                "label": "SysML"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "SysIDE configuration",
            "properties": {
                "syside.trace.server": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "messages",
                        "off",
                        "verbose"
                    ],
                    "default": "off",
                    "description": "Server trace level, implicitly used by the default VS Code LanguageClient"
                },
                "syside.standardLibrary": {
                    "scope": "window",
                    "type": "boolean",
                    "default": true,
                    "description": "If true, parse the bundled standard library"
                },
                "syside.standardLibraryPath": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": null,
                    "description": "If set, use this path to import standard library files"
                },
                "syside.logStatistics": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "If true, build times will be reported"
                },
                "syside.defaultBuildOptions.validationChecks": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "all",
                        "none"
                    ],
                    "default": "all",
                    "description": "Which validation checks are enabled for files"
                },
                "syside.defaultBuildOptions.ignoreMetamodelErrors": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "If set, ignore all metamodel errors"
                },
                "syside.defaultBuildOptions.standardLibrary": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "local",
                        "none",
                        "standard"
                    ],
                    "enumDescriptions": [
                        "skip setting up relationships to the standard library elements",
                        "use default standard library",
                        "use standard library elements from the document locally, useful for testing"
                    ],
                    "default": "standard",
                    "description": "Set type of standard library:\n 'none' - skip setting up relationships to the standard library elements\n 'standard' - use default standard library\n 'local' - use standard library elements from the document locally, useful for testing"
                },
                "syside.debug.scopeInLinkingErrors": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "members",
                        "none",
                        "types"
                    ],
                    "default": "none",
                    "description": "Append elements in scope to linking errors"
                },
                "syside.debug.stacktraceInLinkingErrors": {
                    "scope": "window",
                    "type": "boolean",
                    "default": true,
                    "description": "Append stacktrace to thrown errors while resolving references"
                },
                "syside.debug.linkingTrace": {
                    "scope": "window",
                    "type": "boolean",
                    "default": false,
                    "description": "Log linking order"
                },
                "syside.plugins": {
                    "scope": "machine-overridable",
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string",
                        "description": "Path to a .js script or directory of .js scripts"
                    },
                    "description": "Additional plugin paths (.js scripts or directories with .js scripts)\nthat will be loaded on server start-up"
                },
                "syside.client.extensions": {
                    "scope": "window",
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string",
                        "description": "VS Code extension identifier"
                    },
                    "description": "VS Code extensions that extend the language client"
                },
                "syside.server.args.run": {
                    "scope": "window",
                    "type": "array",
                    "items": {
                        "type": [
                            "integer",
                            "string"
                        ]
                    },
                    "default": [],
                    "description": "Command line interface arguments in release mode"
                },
                "syside.server.args.debug": {
                    "scope": "window",
                    "type": "array",
                    "items": {
                        "type": [
                            "integer",
                            "string"
                        ]
                    },
                    "default": null,
                    "description": "Command line interface arguments in debug mode"
                },
                "syside.server.path": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "description": "Server entry path, relative paths will be resolved from the first workspace folder"
                },
                "syside.skipWorkspaceInit": {
                    "description": "Skip collecting files matching extensions in the current workspace on\nstartup",
                    "type": "boolean",
                    "scope": "window"
                },
                "syside.defaultBuildOptions.standalone": {
                    "description": "If true, the document will be built isolated from all the other\ndocuments, i.e. no indexing, no global scope. It's main use is for\ntesting so that each new built file doesn't pollute the global scope and\ninfluence other test results.",
                    "type": "boolean",
                    "scope": "window"
                }
            }
        }
    }
}
