/******************************************************************************
 * This file was generated by langium-cli 0.5.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/

import { loadGrammarFromJson, Grammar } from 'langium';

let loadedKerMLGrammar: Grammar | undefined;
export const KerMLGrammar = (): Grammar => loadedKerMLGrammar ?? (loadedKerMLGrammar = loadGrammarFromJson(`{
  "$type": "Grammar",
  "isDeclared": true,
  "name": "KerML",
  "imports": [],
  "rules": [
    {
      "$type": "ParserRule",
      "name": "NonFeatureElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@17"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@69"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@24"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@95"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@37"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@39"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@35"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@43"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@12"
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@54"
                },
                "arguments": [
                  {
                    "$type": "NamedArgument",
                    "value": {
                      "$type": "ParameterReference",
                      "parameter": {
                        "$ref": "#/rules@0/parameters@0"
                      }
                    },
                    "calledByName": false
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@155"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@0/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@107"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@109"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@99"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@101"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@111"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@119"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@103"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@1/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CompositeOrPortion",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "isComposite",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "composite"
            }
          },
          {
            "$type": "Assignment",
            "feature": "isPortion",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "portion"
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeaturePrefixSuffix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@2"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@244"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@245"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@246"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeaturePrefix",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@4/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "direction",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@238"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@241"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@123"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@130"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@133"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@149"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@139"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@134"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@152"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@157"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@159"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@5/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnnotatingMember",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@261"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@263"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@115"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Model",
      "entry": true,
      "returnType": {
        "$ref": "#/interfaces@6"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@20"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypedByToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "typed"
              },
              {
                "$type": "Keyword",
                "value": "by"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Keyword",
            "value": "conjugates"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementFrag",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyElement",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@10"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyVisibleElement",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@11"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "comments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@261"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "docs",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@263"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "reps",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@265"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "metadata",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@115"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@5"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": false
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@0"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": false
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "relationships",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@1"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": false
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyRelationship",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@10"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "source",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipHierarchy",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@14"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Dependency",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@16/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "dependency"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "from",
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "client",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "client",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@269"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "supplier",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "supplier",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@269"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Namespace",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@6"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@17/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "namespace"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@19"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyNamespace",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@17"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@20"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceMembers",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@5"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@0"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "relationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@1"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@76"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@21"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@261"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@263"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@115"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Alias",
      "returnType": {
        "$ref": "#/interfaces@39"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "alias"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "for"
          },
          {
            "$type": "Assignment",
            "feature": "for",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyAlias",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@21"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypePrefix",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@23/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@241"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Type",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@24/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "type"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyType",
      "returnType": {
        "$ref": "#/interfaces@6"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@24"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@247"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@27"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@28"
                },
                "arguments": []
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@29"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "specializes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@270"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "specializes",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@270"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@9"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "conjugates",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@270"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeRelationshipPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@30"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@31"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@33"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DisjoiningPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "disjoint"
          },
          {
            "$type": "Keyword",
            "value": "from"
          },
          {
            "$type": "Assignment",
            "feature": "disjoins",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "disjoins",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ],
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnioningPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "unions"
          },
          {
            "$type": "Assignment",
            "feature": "unions",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "unions",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ],
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IntersectingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "intersects"
          },
          {
            "$type": "Assignment",
            "feature": "intersects",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "intersects",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ],
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DifferencingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "differences"
          },
          {
            "$type": "Assignment",
            "feature": "differences",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "differences",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ],
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@5"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "members",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@114"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "relationships",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@1"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@0"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "comments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@261"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "docs",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@263"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "reps",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@265"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "metadata",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@115"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "imports",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@76"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "aliases",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@21"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DataType",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@9"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@35/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "datatype"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyDataType",
      "returnType": {
        "$ref": "#/interfaces@8"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@35"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Class",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@10"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@37/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "class"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyClass",
      "returnType": {
        "$ref": "#/interfaces@8"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@37"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Structure",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@11"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@39/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "struct"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyStructure",
      "returnType": {
        "$ref": "#/interfaces@10"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@39"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssociationDeclaration",
      "returnType": {
        "$ref": "#/interfaces@13"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssociationStructure",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@14"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@42/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "assoc"
          },
          {
            "$type": "Keyword",
            "value": "struct"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Association",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@13"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@43/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "assoc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@41"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyAssociation",
      "returnType": {
        "$ref": "#/interfaces@8"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@43"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyAssociationStruct",
      "returnType": {
        "$ref": "#/interfaces@11"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@42"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyAssociationStruct2",
      "returnType": {
        "$ref": "#/interfaces@13"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@42"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Behavior",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@12"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@47/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "behavior"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyBehavior",
      "returnType": {
        "$ref": "#/interfaces@10"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@47"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Interaction",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@18"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@49/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "interaction"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyInteraction",
      "returnType": {
        "$ref": "#/interfaces@12"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@49"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyInteraction2",
      "returnType": {
        "$ref": "#/interfaces@13"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@49"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Metaclass",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@15"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@52/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "metaclass"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyMetaclass",
      "returnType": {
        "$ref": "#/interfaces@11"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@52"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SysMLFunction",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@16"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@54/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "function"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFunction",
      "returnType": {
        "$ref": "#/interfaces@12"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@54"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionBody",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@57"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionBodyPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@0"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "relationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@1"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@5"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "members",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@114"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "imports",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@76"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "aliases",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@21"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "comments",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@261"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "docs",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@263"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "reps",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "metadata",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@115"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "return",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@58"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "result",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@59"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReturnFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "return"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@5"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "LiteralCondition",
                  "true": false
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ResultExpression",
      "returnType": {
        "$ref": "#/interfaces@71"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ResultHierarchy",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@59"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureValue",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "="
              },
              {
                "$type": "Assignment",
                "feature": "isInitial",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ":="
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "isDefault",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "default"
                    }
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "isInitial",
                        "operator": "?=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": ":="
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Filter",
      "returnType": {
        "$ref": "#/interfaces@35"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "filter"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFilter",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@62"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Package",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@37"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@64/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "package"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LibraryPackage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@38"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@65/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@248"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "library"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@288"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "package"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@5"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@0"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "relationships",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@1"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "imports",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@76"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "aliases",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@21"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "comments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@261"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "docs",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@263"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "reps",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@265"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "metadata",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@115"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "filters",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@62"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyPackage",
      "returnType": {
        "$ref": "#/interfaces@6"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@64"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyLibraryPackage",
      "returnType": {
        "$ref": "#/interfaces@37"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@65"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Multiplicity",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@21"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@69/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "multiplicity"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@71"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@75"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyMultiplicity",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@69"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityBounds",
      "returnType": {
        "$ref": "#/interfaces@22"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "range",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyMultiplicityRange",
      "returnType": {
        "$ref": "#/interfaces@21"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@71"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedMultiplicity",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "multiplicity",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@71"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@250"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@250"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsets",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@235"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "subsets",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "subsets",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@275"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Import",
      "returnType": {
        "$ref": "#/interfaces@36"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "import"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@249"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@251"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "["
              },
              {
                "$type": "Assignment",
                "feature": "conditions",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@193"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "]"
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyImportVisibility",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@76"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Feature",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@78/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "feature",
                    "cardinality": "?"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@81"
                    },
                    "arguments": []
                  }
                ]
              },
              {
                "$type": "Keyword",
                "value": "feature"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFeature",
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@78"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDeclarationSuffixPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@233"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@82"
                        },
                        "arguments": []
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@87"
                        },
                        "arguments": []
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@87"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@90"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@247"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@80"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@74"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@74"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureTypingFrag",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@8"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@256"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecialization",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@83"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@75"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@86"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferences",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@236"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "references",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "references",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@275"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureRedefinition",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "redefines",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "redefines",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@275"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureConjugationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@9"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "conjugates",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@88"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureAsTypeReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@274"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ValuePart",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@61"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureRelationshipPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@29"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@91"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@92"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ChainingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "chains"
          },
          {
            "$type": "Assignment",
            "feature": "chains",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvertingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "inverse"
          },
          {
            "$type": "Keyword",
            "value": "of"
          },
          {
            "$type": "Assignment",
            "feature": "inverseOf",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeFeaturingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "featured"
          },
          {
            "$type": "Keyword",
            "value": "by"
          },
          {
            "$type": "Assignment",
            "feature": "featuredBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@270"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "featuredBy",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@270"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@247"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@234"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "specializes",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@272"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "specializes",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@272"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@9"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "conjugates",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@272"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "conjugates",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@272"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ]
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@29"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Classifier",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@8"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@95/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "classifier"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyClassifier",
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@95"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuperclassingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@98"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@98"
                },
                "arguments": []
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSubclassification",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "superclassifies",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@270"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureTyping",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@45"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@99/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "typing"
          },
          {
            "$type": "Assignment",
            "feature": "specific",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@274"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@8"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@254"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFeatureTyping",
      "returnType": {
        "$ref": "#/interfaces@41"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@99"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subclassification",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@46"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@101/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subclassifier"
          },
          {
            "$type": "Assignment",
            "feature": "specific",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@272"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "general",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@272"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummySubclassification",
      "returnType": {
        "$ref": "#/interfaces@41"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@101"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsetting",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@103/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subset"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@253"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@235"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@255"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummySubsetting",
      "returnType": {
        "$ref": "#/interfaces@41"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@103"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@50"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@105/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "redefinition"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@253"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@255"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyRedefinition",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@105"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Specialization",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@41"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@107/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subtype"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@252"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@254"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummySpecialization",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@107"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Conjugation",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@49"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@109/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "conjugation"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "conjugate"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@252"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@9"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@254"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyConjugation",
      "returnType": {
        "$ref": "#/interfaces@41"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@109"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Disjoining",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@42"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@111/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "disjoining"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "disjoint"
          },
          {
            "$type": "Assignment",
            "feature": "disjoined",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "from"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@113"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyDisjoining",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@111"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedDisjoining",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "disjoining",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@277"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MemberFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "member"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@5"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "LiteralCondition",
                  "true": false
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataFeature",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "@"
              },
              {
                "$type": "Keyword",
                "value": "metadata"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@8"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@280"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "about"
              },
              {
                "$type": "Assignment",
                "feature": "about",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@269"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@269"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@117"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyMetadataFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@115"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@0"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "relationships",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@1"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "comments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@261"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "docs",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@263"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "reps",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@265"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "metadata",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@115"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@118"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "imports",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@76"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "aliases",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@21"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "feature",
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "redefines",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@117"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureInverting",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@43"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@119/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "inverting"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "inverse"
          },
          {
            "$type": "Assignment",
            "feature": "featureInverted",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "of"
          },
          {
            "$type": "Assignment",
            "feature": "invertingFeature",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFeatureInverting",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@119"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeFeaturing",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@44"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@121/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@242"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "featuring"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "of"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "feature",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@274"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "by"
          },
          {
            "$type": "Assignment",
            "feature": "featuringType",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@270"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTypeFeaturing",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@121"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Connector",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@123/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "connector"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@125"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyConnector",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@123"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@126"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@127"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BinaryConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@81"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Keyword",
                    "value": "from"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "isSufficient",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "all"
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "from",
                    "cardinality": "?"
                  }
                ]
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@128"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@128"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NaryConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@128"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@128"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorEnd",
      "returnType": {
        "$ref": "#/interfaces@24"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@232"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@236"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "references",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyConnectorEnd",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@128"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnector",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@29"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@130/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "binding"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@132"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyBindingConnector",
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@130"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnectorDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@29"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@81"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@247"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of",
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Succession",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@28"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@133/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "succession"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@138"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionItemFlow",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@32"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@134/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "succession"
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@142"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummySuccession",
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@133"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummySuccessionItemFlow",
      "returnType": {
        "$ref": "#/interfaces@31"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@134"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummySuccessionItemFlow2",
      "returnType": {
        "$ref": "#/interfaces@28"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@134"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@28"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@81"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "first"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "then"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@247"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "first",
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "then"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@128"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlow",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@31"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@139/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@145"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyItemFlow",
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@139"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyItemFlow2",
      "returnType": {
        "$ref": "#/interfaces@26"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@139"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowDeclarationFragment",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@31"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@81"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@89"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "of",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@146"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "from"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@143"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "to"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@143"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@247"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@143"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@143"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowEnd",
      "returnType": {
        "$ref": "#/interfaces@25"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "redefines",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@275"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyItemFlowEnd",
      "returnType": {
        "$ref": "#/interfaces@24"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@143"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowDeclaration",
      "returnType": {
        "$ref": "#/interfaces@31"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@142"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeature",
      "returnType": {
        "$ref": "#/interfaces@23"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@147"
                        },
                        "arguments": []
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@89"
                        },
                        "arguments": [],
                        "cardinality": "?"
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@89"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "typedBy",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "typedBy",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@74"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@74"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": [],
                "cardinality": "+"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyItemFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@146"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Step",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@26"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@149/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "step"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@151"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyStep",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@149"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StepDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Expression",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@152/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "expr"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@154"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyExpression",
      "returnType": {
        "$ref": "#/interfaces@26"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@152"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Predicate",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@17"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@155/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "predicate"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyPredicate",
      "returnType": {
        "$ref": "#/interfaces@16"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@155"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BooleanExpression",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@33"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@157/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "bool"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@154"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyBooleanExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@157"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Invariant",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@34"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@159/parameters@0"
                  }
                },
                "calledByName": false
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "inv"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "true"
              },
              {
                "$type": "Assignment",
                "feature": "isNegated",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "false"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@154"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyInvariant",
      "returnType": {
        "$ref": "#/interfaces@33"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@159"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InlineExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@193"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcreteConditionalExpression",
      "returnType": {
        "$ref": "#/interfaces@60"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "operator",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "if"
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@164"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "?"
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@161"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "else"
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@161"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConditionalExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@164"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@162"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullCoalescingExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@165"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "??"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@166"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@167"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "implies"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@168"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@165"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@169"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "|"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@169"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "or"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@170"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@167"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "xor"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@171"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@169"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AndExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "&"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@172"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "and"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@173"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@174"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@285"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@174"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@172"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@176"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@59"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Alternatives",
                      "elements": [
                        {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@283"
                          },
                          "arguments": []
                        },
                        {
                          "$type": "Keyword",
                          "value": "as"
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@270"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@283"
                      },
                      "arguments": []
                    },
                    {
                      "$type": "Keyword",
                      "value": "as"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@270"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@175"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "@@"
                    },
                    {
                      "$type": "Keyword",
                      "value": "meta"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@270"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataReference",
      "returnType": {
        "$ref": "#/interfaces@70"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "reference",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@269"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@177"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@284"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@177"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RangeExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@178"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ".."
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@178"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Addition",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@179"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "+"
                    },
                    {
                      "$type": "Keyword",
                      "value": "-"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@179"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Multiplication",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@180"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "*"
                    },
                    {
                      "$type": "Keyword",
                      "value": "/"
                    },
                    {
                      "$type": "Keyword",
                      "value": "%"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@180"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Exponentation",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@181"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "**"
                    },
                    {
                      "$type": "Keyword",
                      "value": "^"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@181"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryOperatorExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@282"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@182"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtentExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "all"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@270"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@194"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SequenceExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@193"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@59"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": ","
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@183"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Argument",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@193"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgument",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@274"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PositionalArguments",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@184"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@184"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArguments",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@185"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@185"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@186"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@187"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BaseExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@230"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@229"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@190"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@191"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@192"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@196"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@183"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@274"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataAccessExpression",
      "returnType": {
        "$ref": "#/interfaces@70"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "reference",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          },
          {
            "$type": "Keyword",
            "value": "metadata"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvocationExpression",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "type",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@188"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InlineExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@163"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrimaryExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@189"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "FeatureChainExpression"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@275"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@59"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "["
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@183"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": "]"
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@64"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "->"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "type",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@270"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Alternatives",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "args",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@196"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "args",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@195"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Group",
                            "elements": [
                              {
                                "$type": "Keyword",
                                "value": "("
                              },
                              {
                                "$type": "Alternatives",
                                "elements": [
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Assignment",
                                        "feature": "args",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$ref": "#/rules@184"
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "$type": "Group",
                                        "elements": [
                                          {
                                            "$type": "Keyword",
                                            "value": ","
                                          },
                                          {
                                            "$type": "Assignment",
                                            "feature": "args",
                                            "operator": "+=",
                                            "terminal": {
                                              "$type": "RuleCall",
                                              "rule": {
                                                "$ref": "#/rules@184"
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "cardinality": "*"
                                      }
                                    ]
                                  },
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Assignment",
                                        "feature": "args",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$ref": "#/rules@185"
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "$type": "Group",
                                        "elements": [
                                          {
                                            "$type": "Keyword",
                                            "value": ","
                                          },
                                          {
                                            "$type": "Assignment",
                                            "feature": "args",
                                            "operator": "+=",
                                            "terminal": {
                                              "$type": "RuleCall",
                                              "rule": {
                                                "$ref": "#/rules@185"
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "cardinality": "*"
                                      }
                                    ]
                                  }
                                ],
                                "cardinality": "?"
                              },
                              {
                                "$type": "Keyword",
                                "value": ")"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@61"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "."
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@196"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@62"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": ".?"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@196"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "inferredType": {
                      "$type": "InferredType",
                      "name": "FeatureChainExpression"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": "."
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@275"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReferenceExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@270"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BodyExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@197"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionBody",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@57"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "}"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgumentHierarchy",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@185"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceExpressionHierarchy",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@190"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OperatorExpressionHierarchy",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@208"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OperatorExpressionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@208"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CollectExpressionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@61"
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@189"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@196"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SelectExpressionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@62"
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@189"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@196"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConditionalExpressionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@162"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChainExpressionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "FeatureChainExpression"
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataAccessExpressionHierarchy",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@191"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvocationExpressionTypings",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@270"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OperatorExpressionOperators",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "operator",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@222"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DependencyHierarchy",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@16"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "DECIMAL",
      "definition": {
        "$type": "RegexToken",
        "regex": "[0-9]+"
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FRACTION",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "CharacterRange",
            "left": {
              "$type": "Keyword",
              "value": "."
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@210"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FLOAT",
      "definition": {
        "$type": "TerminalAlternatives",
        "elements": [
          {
            "$type": "TerminalGroup",
            "elements": [
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@210"
                }
              },
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@211"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@211"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "EXPONENT",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "RegexToken",
            "regex": "[eE][\\\\-\\\\+]*"
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@210"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "NUMBER",
      "type": {
        "$type": "ReturnType",
        "name": "number"
      },
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@212"
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@213"
            },
            "cardinality": "?"
          }
        ]
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "[_a-zA-Z][\\\\w_\\\\d]*"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "UNRESTRICTED_NAME",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "'(\\\\\\\\['\\"bftn\\\\\\\\]|[^'\\\\\\\\])*'"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "STRING_VALUE",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "\\"[^\\"]*\\""
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "REGULAR_COMMENT",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "WS",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\s+"
      },
      "fragment": false
    },
    {
      "$type": "ParserRule",
      "name": "Name",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@215"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@216"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ScopeToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Keyword",
        "value": "::"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ChainToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Keyword",
        "value": "."
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralBoolean",
      "returnType": {
        "$ref": "#/interfaces@65"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "false"
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "true"
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralString",
      "returnType": {
        "$ref": "#/interfaces@68"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@217"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralNumber",
      "returnType": {
        "$ref": "#/interfaces@67"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@214"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralInfinity",
      "returnType": {
        "$ref": "#/interfaces@66"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@66"
            }
          },
          {
            "$type": "Keyword",
            "value": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralExpression",
      "returnType": {
        "$ref": "#/types@9"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@225"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@226"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullExpression",
      "returnType": {
        "$ref": "#/interfaces@69"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@69"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "null"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "("
                  },
                  {
                    "$type": "Keyword",
                    "value": ")"
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ShortName",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Assignment",
            "feature": "declaredShortName",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@222"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ">"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RegularName",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "declaredName",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@222"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Identification",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@231"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@232"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@232"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecializesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "specializes"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubsetsToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "subsets"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferencesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::>"
          },
          {
            "$type": "Keyword",
            "value": "references"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RedefinesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>>"
          },
          {
            "$type": "Keyword",
            "value": "redefines"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDirectionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "in"
          },
          {
            "$type": "Keyword",
            "value": "inout"
          },
          {
            "$type": "Keyword",
            "value": "out"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibilityKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "private"
          },
          {
            "$type": "Keyword",
            "value": "protected"
          },
          {
            "$type": "Keyword",
            "value": "public"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::*"
          },
          {
            "$type": "Keyword",
            "value": "::**"
          },
          {
            "$type": "Keyword",
            "value": "::*::**"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Abstract",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isAbstract",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "abstract"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Visibility",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "visibility",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@239"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibleElement",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@242"
        },
        "arguments": [],
        "cardinality": "?"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Readonly",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isReadOnly",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "readonly"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Derived",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isDerived",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "derived"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "End",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isEnd",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "end"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Sufficient",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isSufficient",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Standard",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isStandard",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "standard"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportAll",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "importsAll",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityProperties",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                },
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportedNamespace",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "importedNamespace",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@269"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@240"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecificType",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "specific",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@277"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecificFeature",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "specific",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@275"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GeneralType",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "general",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@277"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GeneralFeature",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "general",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@275"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureTypings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typedBy",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@277"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureTyping",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "typedBy",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@277"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualAnnotatingElementBody",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "body",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@218"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualAnnotatingElement",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@258"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTextualAnnotatingElement",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@259"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Comment",
      "returnType": {
        "$ref": "#/interfaces@2"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "comment"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "about"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@269"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "about",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@269"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@258"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyComment",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@261"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Documentation",
      "returnType": {
        "$ref": "#/interfaces@3"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "doc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@258"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyDocumentation",
      "returnType": {
        "$ref": "#/interfaces@2"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@263"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@4"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "rep"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@233"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "language"
          },
          {
            "$type": "Assignment",
            "feature": "language",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@217"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@258"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@265"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "QualifiedReferenceChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "chain",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@5"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@222"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@223"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@222"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnyReferenceChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "chain",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@5"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@222"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@223"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@222"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@224"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@222"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@223"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "chain",
                    "operator": "+=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$ref": "#/interfaces@5"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@222"
                        },
                        "arguments": []
                      },
                      "deprecatedSyntax": false
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementReference",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@267"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@267"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTypeReference",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@270"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierReference",
      "returnType": {
        "$ref": "#/interfaces@54"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@267"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyClassifierReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@272"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "QualifiedFeatureReference",
      "returnType": {
        "$ref": "#/interfaces@55"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "chain",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@5"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@222"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@223"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@222"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChain",
      "returnType": {
        "$ref": "#/interfaces@55"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@268"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFeatureReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@274"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReferenceOrFeatureChain",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@270"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@275"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTypeOrFeatureReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@277"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementReferenceOrFeatureChain",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@269"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@275"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetaclassReference",
      "returnType": {
        "$ref": "#/interfaces@56"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@267"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyMetaclassReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@280"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "+"
          },
          {
            "$type": "Keyword",
            "value": "-"
          },
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Keyword",
            "value": "not"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationTestOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "istype"
          },
          {
            "$type": "Keyword",
            "value": "hastype"
          },
          {
            "$type": "Keyword",
            "value": "@"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Keyword",
            "value": ">"
          },
          {
            "$type": "Keyword",
            "value": "<="
          },
          {
            "$type": "Keyword",
            "value": ">="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "=="
          },
          {
            "$type": "Keyword",
            "value": "!="
          },
          {
            "$type": "Keyword",
            "value": "==="
          },
          {
            "$type": "Keyword",
            "value": "!=="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataPrefix",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "#"
          },
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@280"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataMember",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "prefixes",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@286"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataMembers",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@287"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "prefixes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@286"
              },
              "arguments": []
            },
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    }
  ],
  "definesHiddenTokens": false,
  "hiddenTokens": [],
  "interfaces": [
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@0"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "visibility",
          "isOptional": true
        }
      ],
      "name": "VisibilityElement",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "body",
          "isOptional": false
        }
      ],
      "name": "TextualAnnotatingElement",
      "superTypes": [
        {
          "$ref": "#/interfaces@5"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "about",
          "isOptional": false
        }
      ],
      "name": "Comment",
      "superTypes": [
        {
          "$ref": "#/interfaces@1"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Documentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@2"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "language",
          "isOptional": false
        }
      ],
      "name": "TextualRepresentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@1"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@39"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "aliases",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@5"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "elements",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@36"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "imports",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "members",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@40"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "relationships",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@2"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "comments",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@3"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "docs",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@20"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "metadata",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@20"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "prefixes",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@4"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "reps",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "name",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "shortName",
          "isOptional": true
        }
      ],
      "name": "Element",
      "superTypes": [
        {
          "$ref": "#/interfaces@0"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Namespace",
      "superTypes": [
        {
          "$ref": "#/interfaces@5"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "conjugates",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "differences",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "disjoins",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "intersects",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isSufficient",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@22"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "multiplicity",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "specializes",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "unions",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "abstract"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isAbstract",
          "isOptional": true
        }
      ],
      "name": "Type",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Classifier",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "DataType",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Class",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Structure",
      "superTypes": [
        {
          "$ref": "#/interfaces@10"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Behavior",
      "superTypes": [
        {
          "$ref": "#/interfaces@10"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Association",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssociationStructure",
      "superTypes": [
        {
          "$ref": "#/interfaces@13"
        },
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Metaclass",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@71"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "result",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "return",
          "isOptional": false
        }
      ],
      "name": "SysMLFunction",
      "superTypes": [
        {
          "$ref": "#/interfaces@12"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Predicate",
      "superTypes": [
        {
          "$ref": "#/interfaces@16"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Interaction",
      "superTypes": [
        {
          "$ref": "#/interfaces@13"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "chains",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "featuredBy",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "inverseOf",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isNonunique",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isOrdered",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "redefines",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "references",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "subsets",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "typedBy",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@63"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@1"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "direction",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "composite"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isComposite",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "derived"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isDerived",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "end"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isEnd",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "portion"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isPortion",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "readonly"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isReadOnly",
          "isOptional": true
        }
      ],
      "name": "Feature",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "about",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "features",
          "isOptional": false
        }
      ],
      "name": "MetadataFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Multiplicity",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "range",
          "isOptional": false
        }
      ],
      "name": "MultiplicityRange",
      "superTypes": [
        {
          "$ref": "#/interfaces@21"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "refSuffix",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "."
              },
              "isArray": false,
              "isRef": false
            },
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "::"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "scope",
          "isOptional": true
        }
      ],
      "name": "ItemFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ConnectorEnd",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ItemFlowEnd",
      "superTypes": [
        {
          "$ref": "#/interfaces@24"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Step",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@24"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "ends",
          "isOptional": false
        }
      ],
      "name": "Connector",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Succession",
      "superTypes": [
        {
          "$ref": "#/interfaces@27"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BindingConnector",
      "superTypes": [
        {
          "$ref": "#/interfaces@27"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@71"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "result",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "return",
          "isOptional": false
        }
      ],
      "name": "Expression",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@23"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "of",
          "isOptional": true
        }
      ],
      "name": "ItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@27"
        },
        {
          "$ref": "#/interfaces@26"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SuccessionItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@31"
        },
        {
          "$ref": "#/interfaces@28"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BooleanExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isNegated",
          "isOptional": false
        }
      ],
      "name": "Invariant",
      "superTypes": [
        {
          "$ref": "#/interfaces@33"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "expression",
          "isOptional": false
        }
      ],
      "name": "ElementFilter",
      "superTypes": [
        {
          "$ref": "#/interfaces@0"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "conditions",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "importedNamespace",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "importsAll",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@5"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "kind",
          "isOptional": true
        }
      ],
      "name": "Import",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@35"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "filters",
          "isOptional": false
        }
      ],
      "name": "Package",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isStandard",
          "isOptional": false
        }
      ],
      "name": "LibraryPackage",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "for",
          "isOptional": false
        }
      ],
      "name": "Alias",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "source",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "target",
          "isOptional": false
        }
      ],
      "name": "Relationship",
      "superTypes": [
        {
          "$ref": "#/interfaces@5"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Specialization",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "disjoined",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "disjoining",
          "isOptional": false
        }
      ],
      "name": "Disjoining",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "featureInverted",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "invertingFeature",
          "isOptional": false
        }
      ],
      "name": "FeatureInverting",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "feature",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "featuringType",
          "isOptional": false
        }
      ],
      "name": "TypeFeaturing",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "FeatureTyping",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@54"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Subclassification",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Subsetting",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Subtype",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Conjugation",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Redefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@47"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "client",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "supplier",
          "isOptional": false
        }
      ],
      "name": "Dependency",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "isRef": true,
              "refType": {
                "$ref": "#/interfaces@5"
              },
              "isArray": true
            }
          ],
          "name": "chain",
          "isOptional": false
        }
      ],
      "name": "ElementReference",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "TypeReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@52"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ClassifierReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@53"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            },
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "prefix",
          "isOptional": true
        }
      ],
      "name": "FeatureReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@53"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MetaclassReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@53"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "Argument",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "name",
          "isOptional": false
        }
      ],
      "name": "NamedArgument",
      "superTypes": [
        {
          "$ref": "#/interfaces@57"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "operator",
          "isOptional": false
        }
      ],
      "name": "OperatorExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "condition",
          "isOptional": false
        }
      ],
      "name": "ConditionalExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@59"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "CollectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@59"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SelectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@59"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "expression",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isDefault",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isInitial",
          "isOptional": false
        }
      ],
      "name": "FeatureValue",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@57"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "args",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "type",
          "isOptional": false
        }
      ],
      "name": "InvocationExpression",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "LiteralBoolean",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "LiteralInfinity",
      "attributes": [],
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "number",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "LiteralNumber",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "LiteralString",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "NullExpression",
      "attributes": [],
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "reference",
          "isOptional": false
        }
      ],
      "name": "MetadataAccessExpression",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "expression",
          "isOptional": false
        }
      ],
      "name": "Result",
      "superTypes": [
        {
          "$ref": "#/interfaces@0"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SelfReferenceExpression",
      "attributes": [],
      "superTypes": []
    }
  ],
  "types": [
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "private"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "protected"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "public"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "VisibilityKind"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "in"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "inout"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "out"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "FeatureDirectionKind"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "+"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "-"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "not"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "~"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "UnaryOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "@"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "hastype"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "istype"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "ClassificationTestOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "!="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "!=="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "=="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "==="
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "EqualityOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "::*"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "::**"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "::*::**"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "ImportKind"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "<"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "<="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": ">"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": ">="
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "RelationalOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@57"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@60"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@64"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/types@9"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@70"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@69"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@59"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@72"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "InlineExpression"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@2"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@3"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@20"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@4"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "Annotation"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@65"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@66"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@67"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@68"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "LiteralExpression"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@55"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@53"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "TypeOrFeatureReference"
    }
  ],
  "usedGrammars": []
}`));

let loadedSysMLGrammar: Grammar | undefined;
export const SysMLGrammar = (): Grammar => loadedSysMLGrammar ?? (loadedSysMLGrammar = loadGrammarFromJson(`{
  "$type": "Grammar",
  "isDeclared": true,
  "name": "SysML",
  "imports": [],
  "rules": [
    {
      "$type": "ParserRule",
      "name": "DefinedByToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "defined"
              },
              {
                "$type": "Keyword",
                "value": "by"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "timeslice"
          },
          {
            "$type": "Keyword",
            "value": "snapshot"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "when"
          },
          {
            "$type": "Keyword",
            "value": "at"
          },
          {
            "$type": "Keyword",
            "value": "after"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateSubactionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "entry"
          },
          {
            "$type": "Keyword",
            "value": "do"
          },
          {
            "$type": "Keyword",
            "value": "exit"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionFeatureKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "trigger"
          },
          {
            "$type": "Keyword",
            "value": "guard"
          },
          {
            "$type": "Keyword",
            "value": "effect"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementConstraintKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "assume"
          },
          {
            "$type": "Keyword",
            "value": "require"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Variation",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isVariation",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "variation"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Individual",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isIndividual",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "individual"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Portion",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "portionKind",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@1"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Model",
      "entry": true,
      "returnType": {
        "$ref": "#/interfaces@6"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@27"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Dependency",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@10/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "dependency"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@411"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "from",
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "client",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@447"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "client",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@447"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "supplier",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@447"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "supplier",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@447"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@15"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibleComment",
      "returnType": {
        "$ref": "#/interfaces@2"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@439"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibleDocumentation",
      "returnType": {
        "$ref": "#/interfaces@3"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@441"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibleTextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@4"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@443"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnnotatingMember",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "comments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@11"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "docs",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@12"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "reps",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@13"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "metadata",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@17"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@75"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@16/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@419"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "metadata"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataUsage",
      "returnType": {
        "$ref": "#/interfaces@76"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "metadata"
              },
              {
                "$type": "Keyword",
                "value": "@"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@18"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "about"
              },
              {
                "$type": "Assignment",
                "feature": "about",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@447"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@447"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@19"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@0"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@458"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@20"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@22"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyUsage",
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "ref",
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@415"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@45"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@35"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@19"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyUsageFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@21"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Package",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@37"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@23/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@25"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LibraryPackage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@38"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@24/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@426"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "library"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@25"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "package"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@411"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@27"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@32"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "filters",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@28"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementFilter",
      "returnType": {
        "$ref": "#/interfaces@35"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "filter"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Alias",
      "returnType": {
        "$ref": "#/interfaces@39"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "alias"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@411"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "for"
          },
          {
            "$type": "Assignment",
            "feature": "for",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@447"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@15"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Import",
      "returnType": {
        "$ref": "#/interfaces@36"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "import"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@427"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@429"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "["
              },
              {
                "$type": "Assignment",
                "feature": "conditions",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "]"
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@15"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@24"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@10"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@77"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@86"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@94"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@96"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@106"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@111"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@123"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@135"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@98"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@138"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@200"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@207"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@210"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@220"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@222"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@229"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@232"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@235"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@243"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@245"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@75"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@31/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@70"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@32/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@71"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@32/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubclassificationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@412"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "specializes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@450"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "specializes",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@450"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@35"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@35"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@36"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@36"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@47"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@428"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@428"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecialization",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@0"
                },
                "arguments": []
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "typedBy",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@455"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "~"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "conjugates",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@101"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "typedBy",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@455"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Keyword",
                            "value": "~"
                          },
                          {
                            "$type": "Assignment",
                            "feature": "conjugates",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@101"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@413"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "subsets",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "subsets",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@453"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@414"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "references",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@415"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "redefines",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "redefines",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@453"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              }
            ]
          }
        ],
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Typings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@0"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "typedBy",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@455"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "~"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "conjugates",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@101"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "typedBy",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@455"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "~"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "conjugates",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@101"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsettings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@413"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "subsets",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@453"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "subsets",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "References",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@414"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "references",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@453"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefinitions",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@415"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "redefines",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@453"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "redefines",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureTypingFrag",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@455"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "~"
              },
              {
                "$type": "Assignment",
                "feature": "conjugates",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@101"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSubsetting",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "subsets",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@453"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedReferenceSubsetting",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "references",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@453"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedRedefinition",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "redefines",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@453"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatedPortTyping",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Assignment",
            "feature": "conjugates",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@101"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedMultiplicity",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "multiplicity",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@48"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityBounds",
      "returnType": {
        "$ref": "#/interfaces@22"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "range",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BasicDefinitionPrefix",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@419"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@6"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionSuffix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@411"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@33"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@54"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@71"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VariantUsageMember",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@55/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "variant"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@74"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "LiteralCondition",
                  "true": false
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RefPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "direction",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@422"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@423"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@424"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Reference",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isReference",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "ref"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BasicUsagePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@57"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsagePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageSuffix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@62"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@34"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageCompletion",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageBody",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@53"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ValuePart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@65"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@66"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureValue",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "="
              },
              {
                "$type": "Assignment",
                "feature": "isInitial",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ":="
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "isDefault",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "default"
                    }
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "isInitial",
                        "operator": "?=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": ":="
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureValueExpression",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "isInitial",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": ":="
            }
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefaultReferenceUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@67/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferenceUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@68/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "ref"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VariantReference",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@69/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@37"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NonOccurrenceUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@67"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@104"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@76"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@70/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@72"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@71/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@71/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StructureUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@88"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@90"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@91"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@95"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@97"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@239"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@246"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@102"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@107"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@129"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@136"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@112"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@115"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@116"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@72/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BehaviorUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@139"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@201"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@183"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@208"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@218"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@221"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@226"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@230"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@244"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@140"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@185"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@209"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@73/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VariantUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@69"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@104"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@88"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@90"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@91"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@95"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@97"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@239"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@246"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@102"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@107"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@129"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@136"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@112"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@115"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@116"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@74/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtendedDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@73"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@75/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtendedUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@76/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@80"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@77/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@50"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "attribute"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@81"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@78/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@59"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "attribute"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@125"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@79/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "enum"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumeratedValue",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@126"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@80/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "enum",
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@126"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@81/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@59"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "enum"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@83"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "values",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@80"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceDefinitionPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@85/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "occurrence"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IndividualDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@86/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsagePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@8"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@88/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "occurrence"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IndividualUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@89/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@90/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@8"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EventOccurrenceUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@137"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@91/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "event"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@35"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "occurrence"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@62"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EmptySuccession",
      "returnType": {
        "$ref": "#/interfaces@147"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EmptySuccessionFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@92"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@82"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@94/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "item"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@83"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@95/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "item"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PartDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@84"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@96/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "part"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PartUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@97/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "part"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@86"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@98/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@50"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "port"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatedPortReference2",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@445"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatedPortReference1",
      "returnType": {
        "$ref": "#/interfaces@54"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@99"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatedPortReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@100"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@87"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@102/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "port"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorEnd",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@410"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@414"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnector",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@112"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@104/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@59"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "binding"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "bind"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Succession",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@147"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@105/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@59"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "succession"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "first"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@113"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@106/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "connection"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@107/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "connection"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "connect"
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@108"
                        },
                        "arguments": []
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "connect"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@108"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorPart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@109"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@110"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BinaryConnectorPart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NaryConnectorPart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ","
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@103"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@132"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@111/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Message",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@133"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@112/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "message"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@113"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MessageDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@133"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@64"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "of",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@118"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "from"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@114"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "to"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@114"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@114"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@114"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MessageEvent",
      "returnType": {
        "$ref": "#/interfaces@137"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@44"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@133"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@115/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@117"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionFlowConnectionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@134"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@116/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "succession"
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@117"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@64"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "of",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@118"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "from"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@121"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "to"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@121"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@121"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@121"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeature",
      "returnType": {
        "$ref": "#/interfaces@23"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@119"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadFeature",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@120"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@64"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@64"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@435"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@47"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@47"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@435"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadFeatureSpecializationPart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@36"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@36"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": [],
                "cardinality": "+"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowEnd",
      "returnType": {
        "$ref": "#/interfaces@25"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "redefines",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@453"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowFeature",
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "redefines",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@452"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@115"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@123/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "interface"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@124"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceBody",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@125"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@126"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@127"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceNonOccurrenceUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@126/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@126/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@126/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@104"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@126/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@126/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceOccurrenceUsageElement",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@128"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@72"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@127/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@127/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefaultInterfaceEnd",
      "returnType": {
        "$ref": "#/interfaces@87"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "direction",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@424"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@116"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@129/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "interface"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@130"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@124"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceUsageDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@116"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "connect"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@131"
                    },
                    "arguments": []
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@131"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfacePart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@132"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@133"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BinaryInterfacePart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@134"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@134"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NaryInterfacePart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@134"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ","
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@134"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@134"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceEnd",
      "returnType": {
        "$ref": "#/interfaces@87"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@410"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@414"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@127"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@135/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "allocation"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@128"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@136/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@137"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "allocation"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "allocate"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@108"
                    },
                    "arguments": []
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "allocate"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@108"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@89"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@138/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "action"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@139/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "action"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@141"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformActionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@136"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@140/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "perform"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@142"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformActionUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@35"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "action"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@144"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@72"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@149"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@146"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@73"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@147"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@145"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardedSuccessionFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@181"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionTargetSuccessionFeature",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@177"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@146/parameters@0"
              }
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeFeature",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@150"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@147/parameters@0"
              }
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InitialNode",
      "inferredType": {
        "$type": "InferredType",
        "name": "InitialNode"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "first"
          },
          {
            "$type": "Assignment",
            "feature": "element",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@452"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@15"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InitialNodeFeature",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@148"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@158"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@153"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@160"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@163"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@165"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@166"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@169"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@150/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeUsageDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "action"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodePrefix",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@151"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@99"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@153/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@154"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptNodeDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@151"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "accept"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@155"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptParameterPart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "parameters",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@156"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "via"
              },
              {
                "$type": "Assignment",
                "feature": "via",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadParameter",
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@119"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@120"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "trigger",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@157"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "TriggerInvocationExpression"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@2"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SendNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@141"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@158/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@159"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SendNodeDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@151"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "send"
          },
          {
            "$type": "Assignment",
            "feature": "send",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "via"
              },
              {
                "$type": "Assignment",
                "feature": "via",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "to",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignmentNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@135"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@160/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@161"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignmentNodeDeclaration",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@151"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "assign"
          },
          {
            "$type": "Assignment",
            "feature": "left",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@162"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ":="
          },
          {
            "$type": "Assignment",
            "feature": "right",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@275"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "FeatureChainExpression"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@59"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "["
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@269"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "]"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@64"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": "->"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "type",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@448"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@282"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@448"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Keyword",
                            "value": "("
                          },
                          {
                            "$type": "Alternatives",
                            "elements": [
                              {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Assignment",
                                    "feature": "args",
                                    "operator": "+=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$ref": "#/rules@270"
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Keyword",
                                        "value": ","
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "args",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$ref": "#/rules@270"
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ],
                                    "cardinality": "*"
                                  }
                                ]
                              },
                              {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Assignment",
                                    "feature": "args",
                                    "operator": "+=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$ref": "#/rules@271"
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Keyword",
                                        "value": ","
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "args",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$ref": "#/rules@271"
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ],
                                    "cardinality": "*"
                                  }
                                ]
                              }
                            ],
                            "cardinality": "?"
                          },
                          {
                            "$type": "Keyword",
                            "value": ")"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@61"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": "."
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@282"
                      },
                      "arguments": []
                    }
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@62"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": ".?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@282"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IfNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@163/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@152"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "if"
          },
          {
            "$type": "Assignment",
            "feature": "condition",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "body",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@164"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "else"
              },
              {
                "$type": "Assignment",
                "feature": "else",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@164"
                      },
                      "arguments": []
                    },
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@163"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": false
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBodyParameter",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "action"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@144"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "}"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "WhileLoopNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@139"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@165/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@152"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "while"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "expression",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@279"
                      },
                      "arguments": []
                    }
                  }
                ]
              },
              {
                "$type": "Keyword",
                "value": "loop"
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "body",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@164"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "until"
              },
              {
                "$type": "Assignment",
                "feature": "until",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": ";"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForLoopNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@140"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@166/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@152"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "for"
          },
          {
            "$type": "Assignment",
            "feature": "for",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@168"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "in"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "body",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@164"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyLoopActionUsage",
      "returnType": {
        "$ref": "#/interfaces@138"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "body",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@164"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForVariableDeclaration",
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@61"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ControlNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@169/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@173"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@169/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@174"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@169/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@175"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@169/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyControlNode",
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@420"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@176"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ControlNodePrefix",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@8"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MergeNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@144"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@172/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "merge"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@176"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DecisionNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@146"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@173/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "decide"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@176"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "JoinNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@145"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@174/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "join"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@176"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForkNode",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@143"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@175/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "fork"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@176"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeBody",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "comments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@11"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "docs",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@12"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "reps",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@13"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "metadata",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@17"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionTargetSuccession",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@177/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@178"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@179"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@180"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@147"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            },
            "cardinality": "+"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardedTargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@98"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "if"
          },
          {
            "$type": "Assignment",
            "feature": "guard",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefaultTargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@98"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "else"
          },
          {
            "$type": "Assignment",
            "feature": "else",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardedSuccession",
      "returnType": {
        "$ref": "#/interfaces@98"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "succession"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "first"
          },
          {
            "$type": "Assignment",
            "feature": "source",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@453"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "if"
          },
          {
            "$type": "Assignment",
            "feature": "guard",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@92"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@182/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "state"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@93"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@183/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "state"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@141"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isParallel",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "parallel"
                },
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@186"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExhibitStateUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@94"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@185/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "exhibit"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@35"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "state"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateBodyItems",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@72"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    },
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@73"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@196"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@195"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "subactions",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@191"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@193"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EntryAction",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@187/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "actionKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "entry"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@190"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DoAction",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@188/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "actionKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "do"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@190"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExitAction",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@189/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "actionKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "exit"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@190"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@194"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@143"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subaction",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@187"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@191/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@188"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@191/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@189"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@191/parameters@0"
                  }
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EntryTransition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "inferredType": {
        "$type": "InferredType",
        "name": "EntryTransition"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@192/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "guardedTarget",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@179"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "then"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "then",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@199"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EntryTransitionFeature",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@192"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@193/parameters@0"
              }
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformedActionUsage",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@136"
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@142"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@99"
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@154"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@141"
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@159"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@135"
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@161"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@98"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@195/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "transition"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@61"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "first"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "source",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@453"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "trigger",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@197"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "if"
              },
              {
                "$type": "Assignment",
                "feature": "guard",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "do"
              },
              {
                "$type": "Assignment",
                "feature": "effect",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@198"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetTransitionUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@98"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@196/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "transition"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "trigger",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@197"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "if"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "guard",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@279"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "do"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "effect",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@198"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "trigger",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@197"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "if"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "guard",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@279"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "do"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "effect",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@198"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "if"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "guard",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@279"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "do"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "effect",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@198"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerAction",
      "returnType": {
        "$ref": "#/interfaces@99"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "accept"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@155"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@194"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@144"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ],
            "cardinality": "?"
          }
        ],
        "cardinality": "?"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionSuccession",
      "returnType": {
        "$ref": "#/interfaces@147"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "ends",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@103"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@105"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@200/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "calc"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@106"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@201/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "calc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationBody",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@204"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationBodyPart",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "imports",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@30"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "aliases",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@29"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@31"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "comments",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@11"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "docs",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@12"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "reps",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@13"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "metadata",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@17"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "variants",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@55"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@70"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@93"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@72"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@149"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@146"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@93"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@73"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@93"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@147"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@145"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "return",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@205"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "result",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@206"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReturnParameter",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@205/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "return"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": [
              {
                "$type": "NamedArgument",
                "value": {
                  "$type": "LiteralCondition",
                  "true": false
                },
                "calledByName": false
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ResultExpression",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@71"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@206/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@95"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@207/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "constraint"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@96"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@208/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "constraint"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssertConstraintUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@97"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@209/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "assert"
          },
          {
            "$type": "Assignment",
            "feature": "isNegated",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "not"
            },
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@35"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "constraint"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@100"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@210/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "requirement"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@212"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementBodyItems",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@71"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@213"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@214"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@215"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@231"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@216"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@217"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubjectUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@213/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isSubject",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "subject"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementConstraintUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@96"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@214/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "constraintKind",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@5"
              },
              "arguments": []
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@37"
                    },
                    "arguments": [],
                    "cardinality": "*"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@211"
                    },
                    "arguments": []
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@466"
                            },
                            "arguments": [],
                            "cardinality": "?"
                          },
                          {
                            "$type": "Keyword",
                            "value": "constraint"
                          }
                        ]
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@466"
                        },
                        "arguments": []
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@202"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@203"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FramedConcernUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@104"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@215/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isFramed",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "frame"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@37"
                    },
                    "arguments": [],
                    "cardinality": "*"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@211"
                    },
                    "arguments": []
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@466"
                            },
                            "arguments": [],
                            "cardinality": "?"
                          },
                          {
                            "$type": "Keyword",
                            "value": "concern"
                          }
                        ]
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@466"
                        },
                        "arguments": []
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@202"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@203"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActorUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@216/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "parameterKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "actor"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StakeholderUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@217/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "parameterKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "stakeholder"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@218/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "requirement"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfyRequirementUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@102"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@219/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "assert",
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isNegated",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "not"
            },
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "satisfy"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@35"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "requirement"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "by"
              },
              {
                "$type": "Assignment",
                "feature": "by",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcernDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@220/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "concern"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcernUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@104"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@221/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "concern"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@107"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@222/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@224"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseBodyItems",
      "fragment": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "imports",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@30"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "aliases",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@29"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@31"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "comments",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@11"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "docs",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@12"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "reps",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@13"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "metadata",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@17"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "variants",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@55"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@70"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@93"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@72"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@149"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@146"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@93"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@73"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@93"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "features",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@147"
                      },
                      "arguments": [
                        {
                          "$type": "NamedArgument",
                          "value": {
                            "$type": "LiteralCondition",
                            "true": true
                          },
                          "calledByName": false
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@145"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "return",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@205"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@213"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@216"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@225"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "result",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@206"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ObjectiveRequirementUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@225/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "requirementKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "objective"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@466"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@108"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@226/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnalysisCaseDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@109"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@227/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "analysis"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnalysisCaseUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@110"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@228/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "analysis"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VerificationCaseDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@123"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@229/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "verification"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VerificationCaseUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@124"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@230/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "verification"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementVerificationUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@231/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "requirementKind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "verify"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@37"
                    },
                    "arguments": [],
                    "cardinality": "*"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@211"
                    },
                    "arguments": []
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@466"
                            },
                            "arguments": [],
                            "cardinality": "?"
                          },
                          {
                            "$type": "Keyword",
                            "value": "requirement"
                          }
                        ]
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@466"
                        },
                        "arguments": []
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@202"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@211"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UseCaseDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@129"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@232/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "use"
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UseCaseUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@130"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@233/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "use"
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IncludeUseCaseUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@131"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@234/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "include"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@35"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "use"
                  },
                  {
                    "$type": "Keyword",
                    "value": "case"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@61"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@117"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@235/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "view"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@236"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinitionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@237"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinitionBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@71"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "filters",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@28"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@238"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewRenderingUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@122"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@238/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "render"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@37"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@118"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@239/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "view"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@240"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@241"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "comments",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@11"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "docs",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "reps",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "metadata",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "variants",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@93"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "features",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@71"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "aliases",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "filters",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@28"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@242"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "features",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@238"
              },
              "arguments": [
                {
                  "$type": "NamedArgument",
                  "value": {
                    "$type": "LiteralCondition",
                    "true": true
                  },
                  "calledByName": false
                }
              ]
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Expose",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@148"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@242/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "expose"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@429"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "["
              },
              {
                "$type": "Assignment",
                "feature": "conditions",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@279"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "]"
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewpointDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@119"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@243/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "viewpoint"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewpointUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@120"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@244/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "viewpoint"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RenderingDefinition",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@121"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@245/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "rendering"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RenderingUsage",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "visible"
        }
      ],
      "returnType": {
        "$ref": "#/interfaces@122"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "guardCondition": {
              "$type": "ParameterReference",
              "parameter": {
                "$ref": "#/rules@246/parameters@0"
              }
            },
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@420"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "rendering"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@60"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InlineExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@279"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcreteConditionalExpression",
      "returnType": {
        "$ref": "#/interfaces@60"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "operator",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "if"
            }
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@250"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "?"
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@247"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "else"
          },
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@247"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConditionalExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@250"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@248"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullCoalescingExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@251"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "??"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@252"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@253"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "implies"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@254"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@251"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@255"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "|"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@255"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "or"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@256"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@253"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@257"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "xor"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@257"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@255"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AndExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@258"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "&"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@258"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "and"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@259"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@260"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@463"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@260"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpressionReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@258"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@262"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@59"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Alternatives",
                      "elements": [
                        {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@461"
                          },
                          "arguments": []
                        },
                        {
                          "$type": "Keyword",
                          "value": "as"
                        }
                      ]
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@448"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@461"
                      },
                      "arguments": []
                    },
                    {
                      "$type": "Keyword",
                      "value": "as"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@448"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@261"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "@@"
                    },
                    {
                      "$type": "Keyword",
                      "value": "meta"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@448"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataReference",
      "returnType": {
        "$ref": "#/interfaces@70"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "reference",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@447"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@263"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@462"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@263"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RangeExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@264"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ".."
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@264"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Addition",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@265"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "+"
                    },
                    {
                      "$type": "Keyword",
                      "value": "-"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Multiplication",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@266"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "*"
                    },
                    {
                      "$type": "Keyword",
                      "value": "/"
                    },
                    {
                      "$type": "Keyword",
                      "value": "%"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@266"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Exponentation",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@267"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "**"
                    },
                    {
                      "$type": "Keyword",
                      "value": "^"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@267"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryOperatorExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@460"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@268"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@268"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtentExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@59"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "all"
                }
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@448"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@280"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SequenceExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@279"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@59"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": ","
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@269"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Argument",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@279"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgument",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@452"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PositionalArguments",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@270"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@270"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArguments",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "args",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@271"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@271"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@272"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@273"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BaseExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@408"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@407"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@276"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@277"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@278"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@282"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@269"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@452"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataAccessExpression",
      "returnType": {
        "$ref": "#/interfaces@70"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "reference",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@447"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          },
          {
            "$type": "Keyword",
            "value": "metadata"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvocationExpression",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "type",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@455"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@274"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InlineExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@249"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrimaryExpression",
      "returnType": {
        "$ref": "#/types@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@275"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "FeatureChainExpression"
                },
                "feature": "args",
                "operator": "+="
              },
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "args",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@453"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@59"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "["
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@269"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": "]"
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@64"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "->"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "type",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@448"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Alternatives",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "args",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@282"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "args",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@281"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Group",
                            "elements": [
                              {
                                "$type": "Keyword",
                                "value": "("
                              },
                              {
                                "$type": "Alternatives",
                                "elements": [
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Assignment",
                                        "feature": "args",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$ref": "#/rules@270"
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "$type": "Group",
                                        "elements": [
                                          {
                                            "$type": "Keyword",
                                            "value": ","
                                          },
                                          {
                                            "$type": "Assignment",
                                            "feature": "args",
                                            "operator": "+=",
                                            "terminal": {
                                              "$type": "RuleCall",
                                              "rule": {
                                                "$ref": "#/rules@270"
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "cardinality": "*"
                                      }
                                    ]
                                  },
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Assignment",
                                        "feature": "args",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$ref": "#/rules@271"
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "$type": "Group",
                                        "elements": [
                                          {
                                            "$type": "Keyword",
                                            "value": ","
                                          },
                                          {
                                            "$type": "Assignment",
                                            "feature": "args",
                                            "operator": "+=",
                                            "terminal": {
                                              "$type": "RuleCall",
                                              "rule": {
                                                "$ref": "#/rules@271"
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "cardinality": "*"
                                      }
                                    ]
                                  }
                                ],
                                "cardinality": "?"
                              },
                              {
                                "$type": "Keyword",
                                "value": ")"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@61"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "."
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@282"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@62"
                        },
                        "feature": "args",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": ".?"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "args",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@282"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "inferredType": {
                      "$type": "InferredType",
                      "name": "FeatureChainExpression"
                    },
                    "feature": "args",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": "."
                  },
                  {
                    "$type": "Assignment",
                    "feature": "args",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@453"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReferenceExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@448"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BodyExpression",
      "inferredType": {
        "$type": "InferredType",
        "name": "FeatureReferenceExpression"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@283"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionBody",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@203"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@17"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@83"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@17"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@82"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@16"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@15"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@16"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@8"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@75"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@76"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferenceUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@21"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@73"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@85"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@10"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@85"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@88"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@73"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@77"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@9"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@77"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@78"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@94"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@11"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@94"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@95"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PartDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@82"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@96"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PartUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@83"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@97"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@102"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@98"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@11"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@98"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@138"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@12"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@138"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@139"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@26"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@139"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IfActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@163"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@89"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@182"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@183"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExhibitStateUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@93"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@185"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExhibitStateUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@136"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@185"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@207"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@17"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@207"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@208"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@33"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@208"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssertConstraintUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@96"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@209"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssertConstraintUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@34"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@209"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@195"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@153"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@95"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@210"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@96"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@218"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfyRequirementUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@219"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfyRequirementUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@97"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@219"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcernDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@100"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@220"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcernUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@221"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@89"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@200"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@16"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@200"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@201"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@201"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@105"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@222"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@106"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@226"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnalysisCaseDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@107"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@227"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnalysisCaseUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@108"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@228"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyConnectorAsUsage",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@60"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorAsUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@336"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorAsUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@336"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnectorAsUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@104"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnectorAsUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@29"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@104"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@84"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@106"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@14"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@106"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@107"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@107"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@113"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@123"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@129"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@84"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@235"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@239"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewpointDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@100"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@243"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewpointUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@244"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RenderingDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@84"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@245"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RenderingUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@246"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VerificationCaseDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@107"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@229"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VerificationCaseUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@108"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@230"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@80"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@79"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@81"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@81"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@113"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@135"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@136"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UseCaseDefinitionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@107"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@232"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UseCaseUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@108"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@233"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IncludeUseCaseUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@130"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@234"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IncludeUseCaseUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@136"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@234"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDefinitionHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@113"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@111"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDefinitionHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@89"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@111"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDefinitionHierarchy3",
      "returnType": {
        "$ref": "#/interfaces@18"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@111"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@115"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@115"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionUsageHierarchy3",
      "returnType": {
        "$ref": "#/interfaces@31"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@115"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionFlowConnectionUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@133"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@116"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionFlowConnectionUsageHierarchy3",
      "returnType": {
        "$ref": "#/interfaces@32"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@116"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignmentActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@160"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerInvocationExpressionHierarchy",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@157"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformActionUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@140"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformActionUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@137"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@140"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EventOccurrenceUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@91"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "WhileLoopActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@138"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@165"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForLoopActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@138"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@166"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LoopActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@376"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SendActionUsageHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@158"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ControlNodeHierarchy",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@169"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForkNodeHierarchy",
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@175"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MergeNodeHierarchy",
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@172"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "JoinNodeHierarchy",
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@174"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DecisionNodeHierarchy",
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@173"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionAsUsageHierarchy1",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@105"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionAsUsageHierarchy2",
      "returnType": {
        "$ref": "#/interfaces@28"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@105"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExposeHierarchy",
      "returnType": {
        "$ref": "#/interfaces@36"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@242"
        },
        "arguments": [
          {
            "$type": "NamedArgument",
            "value": {
              "$type": "LiteralCondition",
              "true": true
            },
            "calledByName": false
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "DECIMAL",
      "definition": {
        "$type": "RegexToken",
        "regex": "[0-9]+"
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FRACTION",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "CharacterRange",
            "left": {
              "$type": "Keyword",
              "value": "."
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@388"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FLOAT",
      "definition": {
        "$type": "TerminalAlternatives",
        "elements": [
          {
            "$type": "TerminalGroup",
            "elements": [
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@388"
                }
              },
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@389"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "EXPONENT",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "RegexToken",
            "regex": "[eE][\\\\-\\\\+]*"
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@388"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "NUMBER",
      "type": {
        "$type": "ReturnType",
        "name": "number"
      },
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@390"
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@391"
            },
            "cardinality": "?"
          }
        ]
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "[_a-zA-Z][\\\\w_\\\\d]*"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "UNRESTRICTED_NAME",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "'(\\\\\\\\['\\"bftn\\\\\\\\]|[^'\\\\\\\\])*'"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "STRING_VALUE",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "\\"[^\\"]*\\""
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "REGULAR_COMMENT",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "WS",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\s+"
      },
      "fragment": false
    },
    {
      "$type": "ParserRule",
      "name": "Name",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@393"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@394"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ScopeToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Keyword",
        "value": "::"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ChainToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Keyword",
        "value": "."
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralBoolean",
      "returnType": {
        "$ref": "#/interfaces@65"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "false"
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "true"
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralString",
      "returnType": {
        "$ref": "#/interfaces@68"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@395"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralNumber",
      "returnType": {
        "$ref": "#/interfaces@67"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@392"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralInfinity",
      "returnType": {
        "$ref": "#/interfaces@66"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@66"
            }
          },
          {
            "$type": "Keyword",
            "value": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralExpression",
      "returnType": {
        "$ref": "#/types@9"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@403"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@404"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@405"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@406"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullExpression",
      "returnType": {
        "$ref": "#/interfaces@69"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@69"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "null"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "("
                  },
                  {
                    "$type": "Keyword",
                    "value": ")"
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ShortName",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Assignment",
            "feature": "declaredShortName",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@400"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ">"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RegularName",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "declaredName",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@400"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Identification",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@409"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@410"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@410"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecializesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "specializes"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubsetsToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "subsets"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferencesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::>"
          },
          {
            "$type": "Keyword",
            "value": "references"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RedefinesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>>"
          },
          {
            "$type": "Keyword",
            "value": "redefines"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDirectionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "in"
          },
          {
            "$type": "Keyword",
            "value": "inout"
          },
          {
            "$type": "Keyword",
            "value": "out"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibilityKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "private"
          },
          {
            "$type": "Keyword",
            "value": "protected"
          },
          {
            "$type": "Keyword",
            "value": "public"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::*"
          },
          {
            "$type": "Keyword",
            "value": "::**"
          },
          {
            "$type": "Keyword",
            "value": "::*::**"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Abstract",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isAbstract",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "abstract"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Visibility",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "visibility",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@417"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibleElement",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@420"
        },
        "arguments": [],
        "cardinality": "?"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Readonly",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isReadOnly",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "readonly"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Derived",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isDerived",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "derived"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "End",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isEnd",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "end"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Sufficient",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isSufficient",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Standard",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isStandard",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "standard"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportAll",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "importsAll",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityProperties",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                },
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportedNamespace",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "importedNamespace",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@447"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@418"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecificType",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "specific",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@455"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecificFeature",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "specific",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@453"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GeneralType",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "general",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@455"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GeneralFeature",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "general",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@453"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureTypings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@455"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typedBy",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@455"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureTyping",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "typedBy",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@455"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualAnnotatingElementBody",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "body",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@396"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualAnnotatingElement",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@436"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTextualAnnotatingElement",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@437"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Comment",
      "returnType": {
        "$ref": "#/interfaces@2"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "comment"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "about"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@447"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "about",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@447"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@436"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyComment",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@439"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Documentation",
      "returnType": {
        "$ref": "#/interfaces@3"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "doc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@411"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@436"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyDocumentation",
      "returnType": {
        "$ref": "#/interfaces@2"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@441"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@4"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "rep"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@411"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "language"
          },
          {
            "$type": "Assignment",
            "feature": "language",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@395"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@436"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@443"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "QualifiedReferenceChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "chain",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@5"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@400"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@401"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@400"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnyReferenceChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "chain",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@5"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@400"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@401"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@400"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@402"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@400"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@401"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "chain",
                    "operator": "+=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$ref": "#/interfaces@5"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@400"
                        },
                        "arguments": []
                      },
                      "deprecatedSyntax": false
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementReference",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@445"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@445"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTypeReference",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@448"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierReference",
      "returnType": {
        "$ref": "#/interfaces@54"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@445"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyClassifierReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@450"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "QualifiedFeatureReference",
      "returnType": {
        "$ref": "#/interfaces@55"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "chain",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@5"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@400"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@401"
                },
                "arguments": []
              },
              {
                "$type": "Assignment",
                "feature": "chain",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@5"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@400"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChain",
      "returnType": {
        "$ref": "#/interfaces@55"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@446"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyFeatureReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@452"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReferenceOrFeatureChain",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@448"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@453"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyTypeOrFeatureReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@455"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementReferenceOrFeatureChain",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@447"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@453"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetaclassReference",
      "returnType": {
        "$ref": "#/interfaces@56"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@445"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DummyMetaclassReference",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@458"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "+"
          },
          {
            "$type": "Keyword",
            "value": "-"
          },
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Keyword",
            "value": "not"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationTestOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "istype"
          },
          {
            "$type": "Keyword",
            "value": "hastype"
          },
          {
            "$type": "Keyword",
            "value": "@"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Keyword",
            "value": ">"
          },
          {
            "$type": "Keyword",
            "value": "<="
          },
          {
            "$type": "Keyword",
            "value": ">="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "=="
          },
          {
            "$type": "Keyword",
            "value": "!="
          },
          {
            "$type": "Keyword",
            "value": "==="
          },
          {
            "$type": "Keyword",
            "value": "!=="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataPrefix",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "#"
          },
          {
            "$type": "Assignment",
            "feature": "typedBy",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@458"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataMember",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "prefixes",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@464"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataMembers",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@465"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "prefixes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@464"
              },
              "arguments": []
            },
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    }
  ],
  "definesHiddenTokens": false,
  "hiddenTokens": [],
  "interfaces": [
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@0"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "visibility",
          "isOptional": true
        }
      ],
      "name": "VisibilityElement",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "body",
          "isOptional": false
        }
      ],
      "name": "TextualAnnotatingElement",
      "superTypes": [
        {
          "$ref": "#/interfaces@5"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "about",
          "isOptional": false
        }
      ],
      "name": "Comment",
      "superTypes": [
        {
          "$ref": "#/interfaces@1"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Documentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@2"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "language",
          "isOptional": false
        }
      ],
      "name": "TextualRepresentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@1"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@39"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "aliases",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@5"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "elements",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@36"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "imports",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "members",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@40"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "relationships",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@2"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "comments",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@3"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "docs",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@20"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "metadata",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@20"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "prefixes",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@4"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "reps",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "name",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "shortName",
          "isOptional": true
        }
      ],
      "name": "Element",
      "superTypes": [
        {
          "$ref": "#/interfaces@0"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Namespace",
      "superTypes": [
        {
          "$ref": "#/interfaces@5"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "conjugates",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "differences",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "disjoins",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "intersects",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isSufficient",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@22"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "multiplicity",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "specializes",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "unions",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "abstract"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isAbstract",
          "isOptional": true
        }
      ],
      "name": "Type",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Classifier",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "DataType",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Class",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Structure",
      "superTypes": [
        {
          "$ref": "#/interfaces@10"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Behavior",
      "superTypes": [
        {
          "$ref": "#/interfaces@10"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Association",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssociationStructure",
      "superTypes": [
        {
          "$ref": "#/interfaces@13"
        },
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Metaclass",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@71"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "result",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "return",
          "isOptional": false
        }
      ],
      "name": "SysMLFunction",
      "superTypes": [
        {
          "$ref": "#/interfaces@12"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Predicate",
      "superTypes": [
        {
          "$ref": "#/interfaces@16"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Interaction",
      "superTypes": [
        {
          "$ref": "#/interfaces@13"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "chains",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "featuredBy",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "inverseOf",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isNonunique",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isOrdered",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "redefines",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "references",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "subsets",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "typedBy",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@63"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@1"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "direction",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "composite"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isComposite",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "derived"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isDerived",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "end"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isEnd",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "portion"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isPortion",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "readonly"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isReadOnly",
          "isOptional": true
        }
      ],
      "name": "Feature",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "about",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "features",
          "isOptional": false
        }
      ],
      "name": "MetadataFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Multiplicity",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "range",
          "isOptional": false
        }
      ],
      "name": "MultiplicityRange",
      "superTypes": [
        {
          "$ref": "#/interfaces@21"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "refSuffix",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "."
              },
              "isArray": false,
              "isRef": false
            },
            {
              "$type": "AtomType",
              "keywordType": {
                "$type": "Keyword",
                "value": "::"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "scope",
          "isOptional": true
        }
      ],
      "name": "ItemFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ConnectorEnd",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ItemFlowEnd",
      "superTypes": [
        {
          "$ref": "#/interfaces@24"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Step",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@24"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "ends",
          "isOptional": false
        }
      ],
      "name": "Connector",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Succession",
      "superTypes": [
        {
          "$ref": "#/interfaces@27"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BindingConnector",
      "superTypes": [
        {
          "$ref": "#/interfaces@27"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@71"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "result",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@19"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "return",
          "isOptional": false
        }
      ],
      "name": "Expression",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@23"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "of",
          "isOptional": true
        }
      ],
      "name": "ItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@27"
        },
        {
          "$ref": "#/interfaces@26"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SuccessionItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@31"
        },
        {
          "$ref": "#/interfaces@28"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BooleanExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isNegated",
          "isOptional": false
        }
      ],
      "name": "Invariant",
      "superTypes": [
        {
          "$ref": "#/interfaces@33"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "expression",
          "isOptional": false
        }
      ],
      "name": "ElementFilter",
      "superTypes": [
        {
          "$ref": "#/interfaces@0"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "conditions",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "importedNamespace",
          "isOptional": true
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "importsAll",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@5"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "kind",
          "isOptional": true
        }
      ],
      "name": "Import",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@35"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "filters",
          "isOptional": false
        }
      ],
      "name": "Package",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isStandard",
          "isOptional": false
        }
      ],
      "name": "LibraryPackage",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "for",
          "isOptional": false
        }
      ],
      "name": "Alias",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "source",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "target",
          "isOptional": false
        }
      ],
      "name": "Relationship",
      "superTypes": [
        {
          "$ref": "#/interfaces@5"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Specialization",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "disjoined",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "disjoining",
          "isOptional": false
        }
      ],
      "name": "Disjoining",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "featureInverted",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "invertingFeature",
          "isOptional": false
        }
      ],
      "name": "FeatureInverting",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "feature",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "featuringType",
          "isOptional": false
        }
      ],
      "name": "TypeFeaturing",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "FeatureTyping",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@54"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Subclassification",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Subsetting",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Subtype",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "specific",
          "isOptional": false
        }
      ],
      "name": "Conjugation",
      "superTypes": [
        {
          "$ref": "#/interfaces@41"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Redefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@47"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "client",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "supplier",
          "isOptional": false
        }
      ],
      "name": "Dependency",
      "superTypes": [
        {
          "$ref": "#/interfaces@40"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "isRef": true,
              "refType": {
                "$ref": "#/interfaces@5"
              },
              "isArray": true
            }
          ],
          "name": "chain",
          "isOptional": false
        }
      ],
      "name": "ElementReference",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "TypeReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@52"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ClassifierReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@53"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            },
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "prefix",
          "isOptional": true
        }
      ],
      "name": "FeatureReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@53"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MetaclassReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@53"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "Argument",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@55"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "name",
          "isOptional": false
        }
      ],
      "name": "NamedArgument",
      "superTypes": [
        {
          "$ref": "#/interfaces@57"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "operator",
          "isOptional": false
        }
      ],
      "name": "OperatorExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "condition",
          "isOptional": false
        }
      ],
      "name": "ConditionalExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@59"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "CollectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@59"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SelectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@59"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "expression",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isDefault",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "isInitial",
          "isOptional": false
        }
      ],
      "name": "FeatureValue",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@57"
              },
              "isArray": true,
              "isRef": false
            }
          ],
          "name": "args",
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@53"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "type",
          "isOptional": false
        }
      ],
      "name": "InvocationExpression",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "boolean",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "LiteralBoolean",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "LiteralInfinity",
      "attributes": [],
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "number",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "LiteralNumber",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "primitiveType": "string",
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "value",
          "isOptional": false
        }
      ],
      "name": "LiteralString",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "NullExpression",
      "attributes": [],
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/interfaces@52"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "reference",
          "isOptional": false
        }
      ],
      "name": "MetadataAccessExpression",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "typeAlternatives": [
            {
              "$type": "AtomType",
              "refType": {
                "$ref": "#/types@7"
              },
              "isArray": false,
              "isRef": false
            }
          ],
          "name": "expression",
          "isOptional": false
        }
      ],
      "name": "Result",
      "superTypes": [
        {
          "$ref": "#/interfaces@0"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SelfReferenceExpression",
      "attributes": [],
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "Definition",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Usage",
      "superTypes": [
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MetadataDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@15"
        },
        {
          "$ref": "#/interfaces@82"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MetadataUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        },
        {
          "$ref": "#/interfaces@83"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ReferenceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "OccurrenceDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@73"
        },
        {
          "$ref": "#/interfaces@10"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "OccurrenceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AttributeDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@73"
        },
        {
          "$ref": "#/interfaces@9"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AttributeUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ItemDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@78"
        },
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ItemUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@79"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PartDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@82"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PartUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@83"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PortDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@78"
        },
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PortUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@79"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConjugatedPortReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@55"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ActionDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@78"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@79"
        },
        {
          "$ref": "#/interfaces@26"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "IfActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "StateDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@89"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "StateUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ExhibitStateUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@93"
        },
        {
          "$ref": "#/interfaces@136"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConstraintDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@78"
        },
        {
          "$ref": "#/interfaces@17"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConstraintUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@79"
        },
        {
          "$ref": "#/interfaces@33"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssertConstraintUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@96"
        },
        {
          "$ref": "#/interfaces@34"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "TransitionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AcceptActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RequirementDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@95"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RequirementUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@96"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SatisfyRequirementUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@101"
        },
        {
          "$ref": "#/interfaces@97"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConcernDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@100"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConcernUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@101"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CalculationDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@89"
        },
        {
          "$ref": "#/interfaces@16"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CalculationUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        },
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@105"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@106"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AnalysisCaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@107"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AnalysisCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@108"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConnectorAsUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        },
        {
          "$ref": "#/interfaces@27"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BindingConnectorAsUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@111"
        },
        {
          "$ref": "#/interfaces@29"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConnectionDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@84"
        },
        {
          "$ref": "#/interfaces@14"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConnectionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@85"
        },
        {
          "$ref": "#/interfaces@111"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "InterfaceDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@113"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "InterfaceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@114"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@84"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@85"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewpointDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@100"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewpointUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@101"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RenderingDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@84"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RenderingUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@85"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "VerificationCaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@107"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "VerificationCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@108"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EnumerationDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@80"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EnumerationUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AllocationDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@113"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AllocationUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@114"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "UseCaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@107"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "UseCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@108"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "IncludeUseCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@130"
        },
        {
          "$ref": "#/interfaces@136"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FlowConnectionDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@113"
        },
        {
          "$ref": "#/interfaces@89"
        },
        {
          "$ref": "#/interfaces@18"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FlowConnectionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@114"
        },
        {
          "$ref": "#/interfaces@90"
        },
        {
          "$ref": "#/interfaces@31"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SuccessionFlowConnectionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@133"
        },
        {
          "$ref": "#/interfaces@32"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssignmentActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PerformActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        },
        {
          "$ref": "#/interfaces@137"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EventOccurrenceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@79"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "LoopActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "WhileLoopActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@138"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ForLoopActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@138"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SendActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ControlNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@90"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ForkNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@142"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MergeNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@142"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "JoinNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@142"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "DecisionNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@142"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SuccessionAsUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@111"
        },
        {
          "$ref": "#/interfaces@28"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Expose",
      "superTypes": [
        {
          "$ref": "#/interfaces@36"
        }
      ],
      "attributes": []
    }
  ],
  "types": [
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "private"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "protected"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "public"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "VisibilityKind"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "in"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "inout"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "out"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "FeatureDirectionKind"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "+"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "-"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "not"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "~"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "UnaryOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "@"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "hastype"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "istype"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "ClassificationTestOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "!="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "!=="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "=="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "==="
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "EqualityOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "::*"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "::**"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "::*::**"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "ImportKind"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "<"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": "<="
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": ">"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "keywordType": {
            "$type": "Keyword",
            "value": ">="
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "RelationalOperator"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@57"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@60"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@64"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/types@9"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@70"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@69"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@59"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@72"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "InlineExpression"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@2"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@3"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@20"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@4"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "Annotation"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@65"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@66"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@67"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@68"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "LiteralExpression"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@55"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@53"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "TypeOrFeatureReference"
    },
    {
      "$type": "Type",
      "typeAlternatives": [
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@138"
          },
          "isArray": false,
          "isRef": false
        },
        {
          "$type": "AtomType",
          "refType": {
            "$ref": "#/interfaces@138"
          },
          "isArray": false,
          "isRef": false
        }
      ],
      "name": "TransparentElement"
    }
  ],
  "usedGrammars": []
}`));
